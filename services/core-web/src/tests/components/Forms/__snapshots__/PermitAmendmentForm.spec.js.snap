// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PermitAmendmentForm renders properly 1`] = `
<Connect(ReduxForm)
  initialValues={Object {}}
  isModal={true}
  name="PERMIT_AMENDMENT"
  onSubmit={[MockFunction]}
  reduxFormConfig={
    Object {
      "touchOnBlur": true,
      "validate": [Function],
    }
  }
>
  <Row
    gutter={48}
  >
    <Col
      md={12}
      sm={24}
    >
      <PartySelectField
        allowAddingParties={true}
        id="permittee_party_guid"
        label="Permittee"
        name="permittee_party_guid"
        partyLabel="permittee"
        required={true}
        validate={
          Array [
            [Function],
          ]
        }
      />
      <Field
        component={[Function]}
        id="issue_date"
        label="Issue Date"
        name="issue_date"
        required={true}
        validate={
          Array [
            [Function],
            [Function],
          ]
        }
      />
      <Field
        component={[Function]}
        id="authorization_end_date"
        label="Authorization End Date"
        name="authorization_end_date"
        required={true}
        validate={
          Array [
            [Function],
          ]
        }
      />
      <Field
        component={[Function]}
        id="description"
        label="Description"
        name="description"
        validate={
          Array [
            [Function],
          ]
        }
      />
      <Divider />
      <InternalFormItem
        label="Securities"
      >
        <Field
          component={[Function]}
          id="security_not_required"
          label="Security Not Required"
          name="security_not_required"
          onChange={[Function]}
        />
      </InternalFormItem>
      <Field
        autoComplete="off"
        component={[Function]}
        format={[Function]}
        help="This amount will be added to the Total Assessed Liability amount for this permit.
                Changes to this value in Core will not be updated in MMS."
        id="liability_adjustment"
        label="Assessed Liability Adjustment"
        name="liability_adjustment"
        normalize={[Function]}
        onChange={[Function]}
        onFocus={[Function]}
        validate={
          Array [
            [Function],
          ]
        }
        warn={
          Array [
            [Function],
          ]
        }
      />
      <Field
        component={[Function]}
        id="security_received_date"
        label="Security Received"
        name="security_received_date"
      />
    </Col>
    <Col
      className="border--left--layout"
      md={12}
      sm={24}
    >
      <InternalFormItem
        label="Upload files"
      >
        <Field
          allowMultiple={true}
          component={[Function]}
          id="PermitDocumentFileUpload"
          mineGuid=""
          name="PermitDocumentFileUpload"
          onFileLoad={[Function]}
          onRemoveFile={[Function]}
        />
      </InternalFormItem>
    </Col>
  </Row>
  <div
    className="right center-mobile"
    style={
      Object {
        "paddingTop": "14px",
      }
    }
  >
    <RenderCancelButton />
    <RenderSubmitButton
      buttonText="mockTitle"
    />
  </div>
</Connect(ReduxForm)>
`;
